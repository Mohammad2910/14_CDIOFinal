DROP SCHEMA IF EXISTS `webshop` ;
CREATE SCHEMA IF NOT EXISTS `webshop` DEFAULT CHARACTER SET utf8 ;
USE webshop;

-- MySQL Workbench Forward Engineering

SET sql_mode=(SELECT REPLACE(@@sql_mode,'ONLY_FULL_GROUP_BY',''));
SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Table `webshop`.`Raavare`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `webshop`.`Raavare` (
  `RaavareID` INT NOT NULL,
  `RaavareNavn` VARCHAR(50) NOT NULL,
  PRIMARY KEY (`RaavareID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `webshop`.`RaavareBatch`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `webshop`.`RaavareBatch` (
  `RaavareBatchID` INT NOT NULL,
  `Maengde` DECIMAL(10,4) NOT NULL,
  `Leverandoer` VARCHAR(50) NOT NULL,
  `RaavareID` INT NOT NULL,
  PRIMARY KEY (`RaavareBatchID`),
  INDEX `fk_RaavareBatch_Raavare1_idx` (`RaavareID` ASC) VISIBLE,
  CONSTRAINT `fk_RaavareBatch_Raavare1`
    FOREIGN KEY (`RaavareID`)
    REFERENCES `webshop`.`Raavare` (`RaavareID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `webshop`.`Recept`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `webshop`.`Recept` (
  `ReceptID` INT NOT NULL,
  `ReceptNavn` VARCHAR(50) NOT NULL,
   PRIMARY KEY (`ReceptID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `webshop`.`ReceptRaavare`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `webshop`.`ReceptRaavare` (
  `nonNetto` DECIMAL(10,4) NOT NULL,
  `Tolerance` DECIMAL(3,1) NOT NULL,
  `ReceptID` INT NOT NULL,
  `RaavareID` INT NOT NULL,
  PRIMARY KEY (`ReceptID`, `RaavareID`),
  INDEX `fk_ReceptRaavare_Raavare1_idx` (`RaavareID` ASC) VISIBLE,
  CONSTRAINT `fk_ReceptRaavare_Recept1`
    FOREIGN KEY (`ReceptID`)
    REFERENCES `webshop`.`Recept` (`ReceptID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ReceptRaavare_Raavare1`
    FOREIGN KEY (`RaavareID`)
    REFERENCES `webshop`.`Raavare` (`RaavareID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `webshop`.`ProduktBatch`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `webshop`.`ProduktBatch` (
  `ProduktBatchID` INT NOT NULL,
  `ProduktBatchStatus` ENUM('Ikke paabegyndt', 'Under produktion', 'Afsluttet') NOT NULL,
  `ReceptID` INT NOT NULL,
  PRIMARY KEY (`ProduktBatchID`),
  INDEX `fk_ProduktBatch_Recept_idx` (`ReceptID` ASC) VISIBLE,
  CONSTRAINT `fk_ProduktBatch_Recept`
    FOREIGN KEY (`ReceptID`)
    REFERENCES `webshop`.`Recept` (`ReceptID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `webshop`.`Brugere`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `webshop`.`Brugere` (
  `CPR` VARCHAR(10) NOT NULL,
  `BrugerNavn` VARCHAR(50) NOT NULL,
  `Initialer` VARCHAR(10) NOT NULL,
  `Rolle` ENUM('Admin','Produktionsleder','Farmaceut','Laborant') NOT NULL,
  `BrugerStatus` ENUM('Aktiv', 'Ikke aktiv') NOT NULL,
  PRIMARY KEY (`CPR`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `webshop`.`ProduktBatchAfvejning`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `webshop`.`ProduktBatchAfvejning` (
  `Tara` DECIMAL(10,4) NOT NULL,
  `Netto` DECIMAL(10,4) NOT NULL,
  `RaavareBatchID` INT NOT NULL,
  `CPR` VARCHAR(10) NOT NULL,
  `ProduktBatchID` INT NOT NULL,
  `AfvejetTidspunkt` TIMESTAMP DEFAULT NOW() NOT NULL,
  PRIMARY KEY (`RaavareBatchID`, `CPR`, `ProduktBatchID`),
  INDEX `fk_ProduktBatchAfvejning_Brugere1_idx` (`CPR` ASC) VISIBLE,
  INDEX `fk_ProduktBatchAfvejning_ProduktBatch1_idx` (`ProduktBatchID` ASC) VISIBLE,
  CONSTRAINT `fk_ProduktBatchAfvejning_RaavareBatch1`
    FOREIGN KEY (`RaavareBatchID`)
    REFERENCES `webshop`.`RaavareBatch` (`RaavareBatchID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ProduktBatchAfvejning_Brugere1`
    FOREIGN KEY (`CPR`)
    REFERENCES `webshop`.`Brugere` (`CPR`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ProduktBatchAfvejning_ProduktBatch1`
    FOREIGN KEY (`ProduktBatchID`)
    REFERENCES `webshop`.`ProduktBatch` (`ProduktBatchID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;


-- TRIGGERS --
DROP TRIGGER IF EXISTS `webshop`.`ProduktBatchAfvejning_AFTER_INSERT`;

DELIMITER $$
USE `webshop`$$
CREATE DEFINER = CURRENT_USER TRIGGER `webshop`.`ProduktBatchAfvejning_AFTER_INSERT` AFTER INSERT ON `ProduktBatchAfvejning` FOR EACH ROW
BEGIN
DECLARE vRaavareAntal integer;
DECLARE vAfvejningAntal integer;
SELECT COUNT(*) INTO vRaavareAntal FROM Recept NATURAL JOIN ReceptRaavare WHERE Recept.ReceptID = ReceptRaavare.ReceptID && Recept.ReceptID = (SELECT ProduktBatch.ReceptID FROM ProduktBatch WHERE produktbatchid = new.produktbatchid); -- && (SELECT ProduktBatch.ProduktBatchID FROM ProduktBatch) = new.ProduktBatchID;
SELECT COUNT(*) INTO vAfvejningAntal FROM ProduktBatchAfvejning WHERE ProduktBatchAfvejning.ProduktBatchID = new.produktbatchid;
IF vRaavareAntal = vAfvejningAntal THEN UPDATE ProduktBatch SET ProduktBatchStatus = 'Afsluttet' WHERE ProduktBatchID = new.ProduktBatchID;
ELSE UPDATE ProduktBatch SET ProduktBatchStatus = 'Under produktion' WHERE ProduktBatchID = new.ProduktBatchID;
END IF;
UPDATE RaavareBatch SET Maengde = Maengde - NEW.Netto WHERE NEW.RaavareBatchID = RaavareBatchID;
END$$
DELIMITER ;

-- INSERTS --
INSERT INTO Raavare VALUES (1,'Paracetamol'), (2, 'Fentanyl'), (3, 'Methylfenidat'),(4,'Laktose'), (5, 'Salt'), (6, 'Vand');
INSERT INTO Brugere VALUES ('1212993113','Karsten','KK','Admin','Aktiv'),('2004891337','Kirsten','KI','Laborant','Aktiv');
INSERT INTO brugere VALUES('0000000000','Knud','KN','Produktionsleder','Aktiv');
INSERT INTO brugere VALUES('1234567890','Kenny','KE','Farmaceut','Aktiv');
INSERT INTO Recept VALUES (1,'Smertestillende'), (2, 'Sovemedicin'), (3, 'Saltvand');
INSERT INTO ReceptRaavare VALUES (0.004,10,2,2), (0.005,1,2,4), (0.5,5,2,6);
INSERT INTO ReceptRaavare VALUES (0.04,4,1,1), (0.05,2,1,3), (5,5,1,5), (10,5,1,6);
INSERT INTO ReceptRaavare VALUES (1,5,3,5), (100,10,3,6);
INSERT INTO ProduktBatch VALUES (1,'Ikke paabegyndt',2);
INSERT INTO ProduktBatch VALUES (2,'Ikke paabegyndt',1);
INSERT INTO ProduktBatch VALUES (3,'Ikke paabegyndt',3);
INSERT INTO RaavareBatch VALUES (1,5,'Orifarm',1), (2,50,'El Chapo farma',2), (3,10,'Actavis',3), (4,10,'Saudi farma',4), (5,100,'Himalaya salt',5),(6,1500,'Øresund',6);
INSERT INTO Raavare VALUES (1,'Paracetamol'), (2, 'Fentanyl'), (3, 'Methylfenidat'),(4,'Laktose'), (5, 'Salt'), (6, 'Vand');
INSERT INTO Brugere VALUES ('1212993113','Karsten','KK','Admin','Aktiv'),('2004891337','Kirsten','KI','Laborant','Aktiv');
INSERT INTO brugere VALUES('0000000000','Knud','KN','Produktionsleder','Aktiv');
INSERT INTO brugere VALUES('1234567890','Kenny','KE','Farmaceut','Aktiv');
INSERT INTO Recept VALUES (1,'Smertestillende'), (2, 'Sovemedicin'), (3, 'Saltvand');
INSERT INTO ReceptRaavare VALUES (0.004,10,2,2), (0.005,1,2,4), (0.5,5,2,6);
INSERT INTO ReceptRaavare VALUES (0.04,4,1,1), (0.05,2,1,3), (5,5,1,5), (10,5,1,6);
INSERT INTO ReceptRaavare VALUES (1,5,3,5), (100,10,3,6);
INSERT INTO ProduktBatch VALUES (1,'Ikke paabegyndt',2);
INSERT INTO ProduktBatch VALUES (2,'Ikke paabegyndt',1);
INSERT INTO ProduktBatch VALUES (3,'Ikke paabegyndt',3);
INSERT INTO RaavareBatch VALUES (1,5,'Orifarm',1), (2,50,'El Chapo farma',2), (3,10,'Actavis',3), (4,10,'Saudi farma',4), (5,100,'Himalaya salt',5),(6,1500,'Øresund',6);